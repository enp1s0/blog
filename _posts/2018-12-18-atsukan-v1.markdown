---
layout: post
title:  "High Performance ATSUKAN Computing"
date:   2018-12-18 01:08:41 +0900
categories: etc
---

{% include header.markdown %}


<h2>概要</h2>
<p>
近年深層学習を含めGPU(Graphics Processing Unit)を用いた並列計算が盛んであるが，それはそうとして冬は熱燗の時期である． 本研究ではグラフィックボードのファンを取り外し徳利を設置し，行列計算等の計算を行うことでGPU温度を高め燗をつけた．
</p>
<h2 id='pre'>実験構成</h2>
<h3 id='pre0'>概要</h3>
<p>
グラボのファンを取り除いて徳利を置き燗をつける．
</p>
<p>
GPU上で計算(以降「燗計算」と呼ぶ．)を行う．
燗計算としてはGEMM (GEneral Matrix Multiply)計算やN体問題，ジュリア集合計算などを実装した．
一般に高効率で最適な並列数なプログラムほど消費電力が高い．
今回は効率的な加熱を行うため最適並列数などの複数のパラメータについてグリッドサーチを行うプログラムを作成した．
</p>
<h3 id='pre1'>ハードウェア</h3>
<table class='table'>
<thead>
<tr>
<td>部品</td>
<td>型番</td>
</tr>
</thead>
<tbody>
<tr>
<td>CPU</td>
<td>AMD Athlon 200GE</td>
</tr>
<tr>
<td>M/B</td>
<td>MSI A320M PRO-VD/S</td>
</tr>
<tr>
<td>RAM</td>
<td>DDR4 2666MHz PC4-21300 8GB</td>
</tr>
<tr>
<td>SSD</td>
<td>Kingston SSD SA400S37/120G</td>
</tr>
<tr>
<td>Graphics</td>
<td>ASUS GTX650-E-1GD5</td>
</tr>
<tr>
<td>グラボ置き</td>
<td>学位記</td>
</tr>
</tbody>
</table>

![atsukan-server-0]({{site.baseurl}}/assets/images/atsukan-server-0.jpg)
![atsukan-server-1]({{site.baseurl}}/assets/images/atsukan-server-1.jpg)
![atsukan-server-2]({{site.baseurl}}/assets/images/atsukan-server-2.jpg)

<h3 id='pre2'>ソフトウェア</h3>
<h4>OS</h4>
ArchLinux
<dl>
<dt>uname -a</dt><dd><pre class='code-line'>Linux 4.19.8-arch1-1-ARCH #1 SMP PREEMPT Sat Dec 8 13:49:11 UTC 2018 x86_64 GNU/Linux</pre></dd>
</dl>
<h4>プログラム</h4>
<ul>
<li>CUDA/C++</li>
<li>リポジトリ : <a href='https://github.com/enp1s0/atsukan'>GitHub enp1s0/atsukan</a></li>
</ul>
<p>

監視スレッドは燗関数計算スレッドを立ち上げ，GPU温度や消費電力の測定を行う．

![atsukan-flow]({{site.baseurl}}/assets/images/atsukan-flow.svg)

</p>
<h4>プログラムの大まかな仕様</h4>
<ul>

<li>プログラムの引数として燗関数の種類(GEMM，N体問題等)，燗関数へのパラメータ(並列数や問題サイズ等)，計算型(float/double)，実行時間を指定できる</li>
<li>プログラムの引数としてパラメータ探索を行うよう指定でき，グリッドサーチを行う</p>
<li>プログラムの引数として出力モードを切り替えることができ，人間に優しい表示かデータ処理をしやすいようカンマ区切り形式での標準出力を行う</li>

</ul>

<h2 id='exp'>実験</h2>
<h3 id='exp1'>実験1. GPUとの接触について</h3>
<p>
はじめにグラフィックボードからファンとヒートシンクを取り除きグリスを塗り徳利(平底フラスコ)に水を入れ加熱しました．
が，燗計算を行う前にGPUの温度が上昇しデバイスをロストしました．
</p>

![atsukan-touch-0]({{site.baseurl}}/assets/images/atsukan-touch-0.jpg)
![atsukan-touch-1]({{site.baseurl}}/assets/images/atsukan-touch-1.jpg)

<p>
適度に冷却した上で実験を行わないといけないようですね．
そのため以降の計算ではヒートシンクをGPUととっくりの間に挟み，適度に冷却を行いながら実験を行いました．
</p>
<h3 id='exp2'>実験2. GPU温度と液体温度の関係</h3>
<p>加熱対象を水/日本酒(料理酒:13度)とし，温度計を挿入後GEMM計算を行いながら温度を測定した．
加熱対象は初期温度からの温度上昇を，GPU温度はそのままの温度をグラフにしたものが下図である．</p>
<p>GEMMの問題サイズを大きくしすぎるとGPUがロストするので適切な問題サイズで実験は行った．(3つのN×N行列のGEMM計算でN=64，液量は45mL)</p>

![atsukan-temperature]({{site.baseurl}}/assets/images/atsukan-temperature.svg)

<p>
お酒のほうが比熱が低いので早く温まるかなと思っていたけど微妙です．
室温も関係しそうだけど一定にするのしんどい．
</p>
<h3 id='exp4'>実験3. 燗をつけるぞ!!</h3>
GEMM! GEMM! GEMM!!

![atsukan-kanpai-0]({{site.baseurl}}/assets/images/atsukan-kanpai-0.jpg)
![atsukan-kanpai-1]({{site.baseurl}}/assets/images/atsukan-kanpai-1.jpg)

<p>
燗関数をと問題サイズを適切に選んで45度程度に上げました．
</p>
<p>
私はすっかりお酒を飲めなくなってしまったのでお寿司だけいただきました．
</p>

<h2 id='next'>今後の課題</h2>
<ul>
<li>冷却を適切に行なった上で徳利に熱が移動する冷却構造を考案し，最高消費電力を叩き出すパラメータで熱燗を沸かしたい</li>
<li>ハイエンドなGPUでないと消費電力等をNVML APIで取得できないため，壊してもいいハイエンドなGPUを手に入れたい</li>
<li>温度を一定に保つよう温度計と燗計算を連動させたい</li>
<li>いい加減お酒をまた飲めるようになりたい<br>
夏に北海道の余市蒸溜所で飲みすぎて小樽駅のホームとトイレで死にそうな3時間を過ごしたことやいろいろなことを引きずっているのをどうにかしたいです...．</li>
</ul>

<h2 id='fin'>終わりに </h2>
<p>
今回燗をつけるために用いたGPUがKepler世代のもので，SFUを始めとしたいろいろなものが使えずびっくりしました．
きっと数年後にはPascal世代に触れてTensorCoreが使えなくてびっくりしたりするんでしょうね．
</p>
<p>
自分の書いたGPU上で走るカーネル関数が出す熱で燗をつけるということではじめましたが，自分の作った石で熱燗とか作ってみたいですね．
最近話題のMN-CoreのP社とかPxxx-SCxのP社の方々は大きなI社やA社より自分たちが石を作っている実感を得られた上で熱燗を作れるでしょうし羨ましいです．
</p>
<p>本実験では以下のことを得ました
<ul>
<li>冬になるとArchLinuxのインストールバトルをしたくなる私の満足感</li>
<li>先端ソフトウェア工学の課題プログラム</li>
<li>GPUの性質</li>
<li>ヒートシンクとファンのありがたさ</li>
<li>熱燗とお寿司</li>
</ul>
<h3>謝辞</h3>
<p>
研究室で自分の研究の進捗も生まずに熱燗づくりに没頭している私にアドバイスをしてくださった研究室の先生に感謝いたします．
また，メモリアクセス頻度の話など助言してくださったバイト先の方々にも感謝いたします．
最後に断酒状態の私の代わりに作った熱燗を飲んでくれた父親に感謝します．
</p>
<h3>参考文献</h3>
<ul>
<li>Zhe Jia, Marco Maggioni, Benjamin Staiger, Daniele P. Scarpazza : <i>Dissecting the NVIDIA Volta GPU Architecture via Microbenchmarking</i>, arXiv:1804.06826</li>
